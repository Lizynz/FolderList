/*
%hook _SBIconGridWrapperView
%property (nonatomic, strong) UIImage *newImage;
%property (nonatomic, strong) NSArray *icons;
%property (nonatomic, assign) BOOL hasLoadedNewImage;

-(void)setElement:(id)arg1 {
	%orig;
	self.hasLoadedNewImage = NO;
	NSSortDescriptor *sortDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"displayName" ascending:YES selector:@selector(localizedCaseInsensitiveCompare:)];
	self.icons = [self.element.folderIcon.folder.icons sortedArrayUsingDescriptors:@[sortDescriptor]];
}

-(void)setImage:(UIImage*)arg1{
	NSLog(@"ok setting");
	if (arg1 != nil && !self.hasLoadedNewImage) {
		self.newImage = [self drawNewIconInRect:self.bounds];
		self.hasLoadedNewImage = YES;
	}
	%orig(self.newImage);
}
%new
-(UIImage *) drawNewIconInRect:(CGRect)rect {
	UIColor *cellColor;
	
	if (@available(iOS 13, *)) {
		if (self.traitCollection.userInterfaceStyle == UIUserInterfaceStyleDark) {
			cellColor = [UIColor colorWithRed:0.5 green:0.5 blue:0.5 alpha: 0.6];
		} else {
			cellColor = [UIColor colorWithRed:0.65 green:0.65 blue:0.65 alpha: 0.6];
		}
	} else {
		cellColor = [UIColor colorWithRed:0.65 green:0.65 blue:0.65 alpha: 0.6];
	}
	UIGraphicsBeginImageContextWithOptions(rect.size, NO, 0);
	CGColorRef yellow = [[UIColor yellowColor] CGColor];
	CGContextRef context = UIGraphicsGetCurrentContext();
	CGContextClearRect(context, rect);
		
	CGContextSetFillColorWithColor(context, yellow);
	int i = 0;
	for (SBApplicationIcon *icon in self.icons) {
		NSLog(@"icon %@", icon);
		UIImage *appImage = [UIImage _applicationIconImageForBundleIdentifier:((SBApplication *)icon.application).bundleIdentifier format:10];
		UIBezierPath *bezierPath = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, i, rect.size.width, rect.size.height / 5) cornerRadius:2.5];
		CGContextSetFillColorWithColor(context, cellColor.CGColor);
		[bezierPath fill];

		[appImage drawInRect:CGRectMake(3, i + 2.5, 5, 5)];
		i+=(rect.size.height / 5 + 2);
	}

	UIImage *anImage = UIGraphicsGetImageFromCurrentImageContext();
	UIGraphicsEndImageContext();
	return anImage;
}
%end
*/